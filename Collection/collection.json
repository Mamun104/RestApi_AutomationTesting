{
	"info": {
		"_postman_id": "1f41ffe1-c052-4f6e-b0cc-dc50f20bc960",
		"name": "DmoneyAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22958840"
	},
	"item": [
		{
			"name": "User can Login successfully with valid data Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var JsonData = pm.response.json()\r",
							"var token = JsonData.token\r",
							"pm.collectionVariables.set(\"token\",token) \r",
							"pm.environment.set(\"token\",token)\r",
							"\r",
							"pm.test(\"User can Login successfully with valid data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Login successfully\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@grr.la\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User can't Login successfully with invalid email and valid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"User can't Login successfully with invalid email and valid password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"email\":\"ffff\",\r\n    \"password\":\"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User can't Login successfully with valid email and invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"User can't Login successfully with valid email and invalid password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Password incorrect\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@grr.la\",\r\n    \"password\":\"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User can't Login successfully with invalid email and invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"User can't Login successfully with valid email and invalid password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salma@grr.la\",\r\n    \"password\":\"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the user list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User list\")\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "User can't get User List with invalid token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User can't get User List with invalid token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.contains(\"Token expired!\")\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{toke}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Customer Id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/search?id=58",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"search"
					],
					"query": [
						{
							"key": "id",
							"value": "58"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"var JsonData = pm.response.json()\r",
							"var id = JsonData.user.id;\r",
							"pm.collectionVariables.set(\"UserId\",id) \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId  = _.random(10000,99999)\r",
							"var phoneNumber = \"0164\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Mamun\",\r\n    \"email\":\"mamun{{randomId}}@test.com\",\r\n    \"password\":\"1234567\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123456677\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFirstName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123456677\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dmoney.professionaltrainingbd.com/user/create",
					"protocol": "http",
					"host": [
						"dmoney",
						"professionaltrainingbd",
						"com"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Existing Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User can't create a user by same email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId  = _.random(10000,99999)\r",
							"var phoneNumber = \"0164\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Mamun\",\r\n    \"email\":\"Athena_Orn4@gmail.com\",\r\n    \"password\":\"1234567\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"123456677\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Existing Customer With PhoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User can't create a user by same phoneNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId  = _.random(10000,99999)\r",
							"var phoneNumber = \"0164\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Mamun\",\r\n    \"email\":\"user{{randomId}}@test.com\",\r\n    \"password\":\"1234567\",\r\n    \"phone_number\":\"417-603-6100\",\r\n    \"nid\":\"01234567898\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User email update successfully \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated successfully\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId  = _.random(10000,99999)\r",
							"var phoneNumber = \"0164\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \r\n        \"name\": \"Eric Ebert\",\r\n        \"email\": \"eric12345@test.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01329259149\",\r\n        \"nid\": \"123456789\",\r\n        \"role\": \"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/58",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"58"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer with patch method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User email update successfully \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated successfully\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId  = _.random(10000,99999)\r",
							"var phoneNumber = \"0164\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \r\n    \"password\": \"1234\"\r\n\r\n        \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/58",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"58"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/delete/{{UserId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"delete",
						"{{UserId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkBncnIubGEiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2NjU4Mjg4NTEsImV4cCI6MTY2NTgzMDY1MX0.rs_4gvroJnFKWX_eP6WJJ1EWIDycE2GoR2xxUmiTpF4",
			"type": "string"
		},
		{
			"key": "secretkey",
			"value": "ROADTOSDET"
		},
		{
			"key": "randomId",
			"value": 19908
		},
		{
			"key": "phoneNumber",
			"value": "01649027481"
		},
		{
			"key": "UserId",
			"value": 10923
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.professionaltrainingbd.com",
			"type": "string"
		}
	]
}